#!/system/bin/sh

cat << CTAG
{
    name:ADVANCED,
    elements:[
      { SPane:{
		title:"Low Memory Killer",
		description:" LMK Minfree controls how much memory each app type can hold, and is responsible for memory management for multitasking; all values are multiplied by 256 pages."
      }},
`
	for LMK in 1 2 3 4 5 6; do
		echo '{ SSeekBar:{ '
			case $LMK in
			1)
				echo 'title:"Foreground App"' ;;
			2)
				echo 'title:"Visible App"' ;;
			3)
				echo 'title:"Secondary Server"' ;;
			4)
				echo 'title:"Hidden App"' ;;
			5)
				echo 'title:"Content Provider"' ;;
			6)
				echo 'title:"Empty App"' ;;
			esac
			echo ', action:"minfree '${LMK}'",
			min:10, max:200 }},'
	done
`
      { SPane:{
		title:"Kernel Entropy"
      }},
	{ SLiveLabel:{
		title:"Entropy Available",
		refresh:1000,
		action:"live entropy"
	}},
	{ SSeekBar:{
		title:"Read Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/read_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/read_wakeup_threshold"
	}},
	{ SSeekBar:{
		title:"Write Wakeup Threshold",
		max:2048, min:64, step:64,
		default:`cat /proc/sys/kernel/random/write_wakeup_threshold`,
		action:"generic /proc/sys/kernel/random/write_wakeup_threshold"
	}},
	{ SPane:{
		title:"CPU Multicore Power Saving",
		description:"Try to group tasks into the least cores possible. The higher the value, the more aggressive the grouping. With 0 being highest performance and least power savings and level 2 indicating maximum power savings even at the cost of slight performance degradation. Default is 0.",
	}},
	{ SSeekBar:{
		title:"sched_mc_power_savings",
		default:`cat /sys/devices/system/cpu/sched_mc_power_savings`,
		action:"generic /sys/devices/system/cpu/sched_mc_power_savings",
		values:{
			`SMCPS='0:"0: Disabled", 1:"1: Enabled", 2:"2: Aggressive"'
			echo $SMCPS`
		}
	}},
    ]
}
CTAG
