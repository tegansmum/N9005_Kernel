#!/system/bin/sh

cat << CTAG
{
    name:I/O - MEMORY,
    elements:[
    { SPane:{
		title:"I/O Schedulers",
		description:" Set the active I/O elevator algorithm. The scheduler decides how to handle I/O requests and how to handle them."
    }},
	{ SOptionList:{
		title:"Internal_storage scheduler",
		default:`cat /sys/block/mmcblk0/queue/scheduler | busybox awk 'NR>1{print $1}' RS=[ FS=]`,
		action:"scheduler /sys/block/mmcblk0/queue/scheduler",
		values:[`while read values; do busybox printf "%s, \n" $values | busybox tr -d '[]'; done < /sys/block/mmcblk0/queue/scheduler`]
	}},
	{ SSeekBar:{
		title:"Internal_storage read-ahead",
		max:2048,
		min:128,
		unit:" kB",
		step:128,
		default:`cat /sys/block/mmcblk0/queue/read_ahead_kb`,
		action:"generic /sys/block/mmcblk0/queue/read_ahead_kb"
	}},
	{ SOptionList:{
		title:"ExternalSD scheduler",
		default:`cat /sys/block/mmcblk1/queue/scheduler | busybox awk 'NR>1{print $1}' RS=[ FS=]`,
		action:"scheduler /sys/block/mmcblk1/queue/scheduler",
		values:[`while read values; do busybox printf "%s, \n" $values | busybox tr -d '[]'; done < /sys/block/mmcblk1/queue/scheduler`]
	}},
	{ SSeekBar:{
		title:"ExternalSD read-ahead",
		max:2048,
		min:128,
		unit:" kB",
		step:128,
		default:`cat /sys/block/mmcblk1/queue/read_ahead_kb`,
		action:"generic /sys/block/mmcblk1/queue/read_ahead_kb"
	}},
	{ SPane:{
		title:"General I/O Tunables",
		description:" Set the internal storage general tunables"
	}},
	{ SCheckBox:{
		description:" Draw entropy from spinning (rotational) storage. Default is Enabled",
		label:"Add Random",
		default:`cat /sys/block/mmcblk0/queue/add_random`,
		action:"generic /sys/block/mmcblk0/queue/add_random"
	}},
	{ SCheckBox:{
		description:" Maintain I/O statistics for this storage device. Disabling will break I/O monitoring apps. Default is Enabled.",
		label:"I/O Stats",
		default:`cat /sys/block/mmcblk0/queue/iostats`,
		action:"generic /sys/block/mmcblk0/queue/iostats"
	}},
	{ SCheckBox:{
		description:" Treat device as rotational storage. Default is Disabled",
		label:"Rotational",
		default:`cat /sys/block/mmcblk0/queue/rotational`,
		action:"generic /sys/block/mmcblk0/queue/rotational"
	}},				
	{ SSeekBar:{
		title:" No Merges",
		description:" Types of merges (prioritization) the scheduler queue for this storage device allows. Default is All.",
		default:`cat /sys/block/mmcblk0/queue/nomerges`,
		action:"generic /sys/block/mmcblk0/queue/nomerges",
		values:{
			`NM='0:"All", 1:"Simple Only", 2:"None",'
			echo $NM`
		}
	}},
	{ SSeekBar:{
		title:"RQ Affinity",
		description:" Try to have scheduler requests complete on the CPU core they were made from. Higher is more aggressive. Some kernels only support 0-1. Default is 1.",
		default:`cat /sys/block/mmcblk0/queue/rq_affinity`,
		action:"generic /sys/block/mmcblk0/queue/rq_affinity",
		values:{
			`RQA='0:"0: Disabled", 1:"1", 2:"2"'
			echo $RQA`
		}
	}},
	{ SPane:{
		title:"I/O Scheduler Tunables",
		description:" If you have just changed IO scheduler, you MUST RESTART SYNAPSE app to view new tunables for that scheduler!"
	}},
		{ STreeDescriptor:{
			path:"/sys/block/mmcblk0/queue/iosched",
			generic: {
				directory: {},
				element: {
					SGeneric: { title:"@BASENAME" }
				}
			},
			exclude: [ "weights" ]
		}},
	{ SPane:{
		title:"KSM Control",
		description:" Enabling Kernel SamePage Merging (KSM) will merge some memory > possible slight performance bump, but need cpu-power + battery. Default is OFF."
	}},
	{ SCheckBox:{
		label:"Enable or Disable KSM",
		default:`cat /sys/kernel/mm/ksm/run`,
		action:"generic /sys/kernel/mm/ksm/run"
    	}},
	{ SSeekBar:{
		title:"Pages to Scan",
		unit:" pages",
		step:10,
		min:0,
		max:500,
		default:`cat /sys/kernel/mm/ksm/pages_to_scan`,
		action:"generic /sys/kernel/mm/ksm/pages_to_scan"
		}},
	{ SSeekBar:{
		title:"Scan Delay Interval",
		unit:" ms",
		step:10,
		min:0,
		max:500,
		default:`cat /sys/kernel/mm/ksm/sleep_millisecs`,
		action:"generic /sys/kernel/mm/ksm/sleep_millisecs"
	}},
    ]
}
CTAG
