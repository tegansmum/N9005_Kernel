#!/system/bin/sh

cat << CTAG
{
    name:MEMORY,
    elements:[
    { SPane:{
		title:"I/O Schedulers",
		description:" Set the active I/O elevator algorithm. The scheduler decides how to handle I/O requests and how to handle them."
    }},
	{ SOptionList:{
		title:"Internal_storage scheduler",
		default:`cat /sys/block/mmcblk0/queue/scheduler | busybox awk 'NR>1{print $1}' RS=[ FS=]`,
		action:"scheduler /sys/block/mmcblk0/queue/scheduler",
		values:[`while read values; do busybox printf "%s, \n" $values | busybox tr -d '[]'; done < /sys/block/mmcblk0/queue/scheduler`]
	}},
	{ SSeekBar:{
		title:"Internal_storage read-ahead",
		max:2048,
		min:128,
		unit:" kB",
		step:128,
		default:`cat /sys/block/mmcblk0/queue/read_ahead_kb`,
		action:"generic /sys/block/mmcblk0/queue/read_ahead_kb"
	}},
	{ SOptionList:{
		title:"ExternalSD scheduler",
		default:`cat /sys/block/mmcblk1/queue/scheduler | busybox awk 'NR>1{print $1}' RS=[ FS=]`,
		action:"scheduler /sys/block/mmcblk1/queue/scheduler",
		values:[`while read values; do busybox printf "%s, \n" $values | busybox tr -d '[]'; done < /sys/block/mmcblk1/queue/scheduler`]
	}},
	{ SSeekBar:{
		title:"ExternalSD read-ahead",
		max:2048,
		min:128,
		unit:" kB",
		step:128,
		default:`cat /sys/block/mmcblk1/queue/read_ahead_kb`,
		action:"generic /sys/block/mmcblk1/queue/read_ahead_kb"
	}},
	{ SPane:{
		title:"General I/O Tunables",
		description:" Set the internal storage general tunables"
	}},
	{ SCheckBox:{
		description:" Draw entropy from spinning (rotational) storage. Default is Enabled",
		label:"Add Random",
		default:`cat /sys/block/mmcblk0/queue/add_random`,
		action:"generic /sys/block/mmcblk0/queue/add_random"
	}},
	{ SCheckBox:{
		description:" Maintain I/O statistics for this storage device. Disabling will break I/O monitoring apps. Default is Enabled.",
		label:"I/O Stats",
		default:`cat /sys/block/mmcblk0/queue/iostats`,
		action:"generic /sys/block/mmcblk0/queue/iostats"
	}},
	{ SCheckBox:{
		description:" Treat device as rotational storage. Default is Disabled",
		label:"Rotational",
		default:`cat /sys/block/mmcblk0/queue/rotational`,
		action:"generic /sys/block/mmcblk0/queue/rotational"
	}},				
	{ SSeekBar:{
		title:" No Merges",
		description:" Types of merges (prioritization) the scheduler queue for this storage device allows. Default is All.",
		default:`cat /sys/block/mmcblk0/queue/nomerges`,
		action:"generic /sys/block/mmcblk0/queue/nomerges",
		values:{
			`NM='0:"All", 1:"Simple Only", 2:"None",'
			echo $NM`
		}
	}},
	{ SSeekBar:{
		title:"RQ Affinity",
		description:" Try to have scheduler requests complete on the CPU core they were made from. Higher is more aggressive. Some kernels only support 0-1. Default is 1.",
		default:`cat /sys/block/mmcblk0/queue/rq_affinity`,
		action:"generic /sys/block/mmcblk0/queue/rq_affinity",
		values:{
			`RQA='0:"0: Disabled", 1:"1", 2:"2"'
			echo $RQA`
		}
	}},
	{ SPane:{
		title:"I/O Scheduler Tunables",
		description:" If you have just changed IO scheduler, you MUST RESTART SYNAPSE app to view new tunables for that scheduler!"
	}},
		{ STreeDescriptor:{
			path:"/sys/block/mmcblk0/queue/iosched",
			generic: {
				directory: {},
				element: {
					SGeneric: { title:"@BASENAME" }
				}
			},
			exclude: [ "weights", "wr_max_time" ]
		}},
	{ SPane:{
		title:"KSM Control",
		description:" Enabling Kernel SamePage Merging (KSM) will merge some memory > possible slight performance bump, but need cpu-power + battery. Default is OFF."
	}},
	{ SDescription:{
		description:" "
	}},
	{ SCheckBox:{
		label:"Enable or Disable KSM",
		default:`cat /sys/kernel/mm/ksm/run`,
		action:"generic /sys/kernel/mm/ksm/run"
    	}},
	{ SDescription:{
		description:" "
	}},
	{ SSeekBar:{
		title:"Pages to Scan",
		unit:" pages",
		step:10,
		min:0,
		max:500,
		default:`cat /sys/kernel/mm/ksm/pages_to_scan`,
		action:"generic /sys/kernel/mm/ksm/pages_to_scan"
		}},
	{ SSeekBar:{
		title:"Scan Delay Interval",
		unit:" ms",
		step:10,
		min:0,
		max:500,
		default:`cat /sys/kernel/mm/ksm/sleep_millisecs`,
		action:"generic /sys/kernel/mm/ksm/sleep_millisecs"
	}},
	{ SDescription:{
		description:" "
	}},
	{ SDescription:{
		description:" Enabling Deferred Timer will prevent the KSM thread waking up CPU to carry out KSM activities, thus gaining on battery while compromising slightly on memory that could have been saved."
	}},
	{ SCheckBox:{
		label:"Enable or Disable Deferred Timer",
       	 	default:`cat /sys/kernel/mm/ksm/deferred_timer`,
		action:"generic /sys/kernel/mm/ksm/deferred_timer"
	}},
	{ SDescription:{
		description:" "
	}},
	{ SPane:{
		title:"Dynamic Dirty Page Writeback"
	}},
	{ SDescription:{
		description:" Allows to dynamically manage the dirty page writebacks with two different intervals, one when the screen is on and another when the screen is off."
	}},
	{ SDescription:{
		description:" A higher interval we have better performance and less battery consumption, with a very low risk of data loss. Disabling will set a fixed stock 500 for both screen on & off."
	}},
	{ SDescription:{
		description:" Default is Enabled."
	}},
	{ SDescription:{
		description:" "
	}},
	{ SCheckBox:{
		label:"Enable or Disable Dynamic Dirty Page Writeback",
       	 	default:`cat /proc/sys/vm/dynamic_dirty_writeback`,
		action:"generic /proc/sys/vm/dynamic_dirty_writeback"
	}},
	{ SDescription:{
		description:" "
	}},
	{ SSeekBar:{
		title:"Dirty Writeback Active",
		description:" Time interval between wakeups of the pdflush writeback daemons which write old data out to disk whilst SCREEN is ON. Default is 1500.",
		max:5000,
		min:500,
		step:500,
		default:`cat /proc/sys/vm/dirty_writeback_active_centisecs`,
		action:"generic /proc/sys/vm/dirty_writeback_active_centisecs",
	}},
	{ SSeekBar:{
		title:"Dirty Writeback Suspend",
		description:" Time interval between wakeups of the pdflush writeback daemons which write old data out to disk whilst SCREEN is OFF. Default is 500.",
		max:1000,
		min:100,
		step:100,
		default:`cat /proc/sys/vm/dirty_writeback_suspend_centisecs`,
		action:"generic /proc/sys/vm/dirty_writeback_suspend_centisecs",
	}},
	{ STitleBar:{
		title:"Virtual Memory"
	}},
    	{ SSeekBar:{
        	title:"dirty_background_ratio",
        	description:" Dirty background memory buffer, more you set, more memory will be used for write buffer for background operations, buffer is released on need to free RAM. Default is 5.",
        	min:0,
		max:100, 
		unit:" %", 
		step:5,
        	default:`cat /proc/sys/vm/dirty_background_ratio`,
       		action:"generic /proc/sys/vm/dirty_background_ratio",
    	}},
	{ SSeekBar:{
        	title:"dirty_ratio",
        	description:" Dirty real time memory buffer, more you set, more memory will be used for write buffer for real time operations, buffer is released on need to free RAM. Default is 20.",
        	min:0,
		max:100,
		unit:" %",
		step:5,
       	 	default:`cat /proc/sys/vm/dirty_ratio`,
        	action:"generic /proc/sys/vm/dirty_ratio",
    	}},
	{ SSeekBar:{
		title:"swappiness",
		description:" A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space. Default is 60.",
		max:100,
		min:0,
		step:10,
		default:`cat /proc/sys/vm/swappiness`,
		action:"generic /proc/sys/vm/swappiness",
	}},
	{ SPane:{
		title:"Adaptive VFS Cache Pressure on Suspend / Resume",
		description:" Value used to control the tendency of the kernel to reclaim the memory which is used for caching of directory and inode objects when screen is ON (Default is 100) and screen OFF (fixed 20)."
	}},
	{ SDescription:{
		description:" "
	}},
    	{ SSeekBar:{
		title:"vfs_cache_pressure",
		unit:" %",
		step:1,
		min:0,
		max:150,
		default:`cat /proc/sys/vm/vfs_cache_pressure`,
		action:"generic /proc/sys/vm/vfs_cache_pressure"
    	}},
    ]
}
CTAG
