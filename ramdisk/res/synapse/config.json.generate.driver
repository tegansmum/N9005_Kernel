#!/system/bin/sh

cat << CTAG
{
    name:DRIVERS,
    elements:[
	{ SPane:{
		title:"Intelli-Hotplug",
		description:" A in-Kernel replacement for Qualcomm_Hotplug_MPDecision, enabling this will disable MPDecision Hotplug.",
		default:`cat /sys/module/intelli_plug/parameters/intelli_plug_active`,
	}},
	{ SCheckBox:{
		label:"Enable Intelli-Hotplug",
		action:"default hotplug"
	}},
	{ SCheckBox:{
		label:"Enable Dual Core Mode",
		description:" Phone will behave like a dual-core",
		default:`cat /sys/module/intelli_plug/parameters/eco_mode_active`,
		action:"generic /sys/module/intelli_plug/parameters/eco_mode_active",
	}},
	{ SCheckBox:{
		label:"Enable Touch Boost Active",
		description:" Default Enabled.",
		default:`cat /sys/module/intelli_plug/parameters/touch_boost_active`,
		action:"generic /sys/module/intelli_plug/parameters/touch_boost_active",
	}},
	{ SPane:{
		title:"Dynamic FSYNC",
		description:" While screen is on file sync is disabled, when screen is off a file sync is called to flush all outstanding writes and restore file sync operation as normal."
	}},
	{ SCheckBox:{
		label:"Enable dynamic fsync",
		default:`cat /sys/kernel/dyn_fsync/Dyn_fsync_active`,
		action:"generic /sys/kernel/dyn_fsync/Dyn_fsync_active"
	}},
	{ SPane:{
		title:"Powersuspend",
		description:" Powersuspend driver is a replacement for the early_suspend/late_resume driver. Hybrid uses autosleep & display panel hook. Default is Hybrid."
	}},
	{ SOptionList:{
		default:`echo $(/res/synapse/actions/suspend powersuspend)`,
		action:"suspend powersuspend",
		values:[Autosleep_hook, Userspace_trigger, DisplayPanel_hook, Hybrid_hook,]
	}},
	{ SPane:{
		title:"CPU_Boost"
	}},
	{ SOptionList:{
		title:"Set Boost Sync frequency",
		description:" When CPU loading crosses the preset threshold, the current CPU is raised to this frequency. Default is 1190.4 MHz ",
		unit:" kHz",
		default:`cat /sys/module/cpu_boost/parameters/sync_threshold`,
		action:"generic /sys/module/cpu_boost/parameters/sync_threshold",
		values:[`while read values; do busybox printf "%s, \n" $values; done < /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies`]
	}},
	{ SSeekBar:{
		title:"Set Boost time in milliseconds ",
		description:" Minimum interval a CPU is boosted. Default is 20.",
		unit:" ms",
		max:100,
		min:10,
		step:10,
		default:`cat /sys/module/cpu_boost/parameters/boost_ms`,
		action:"generic /sys/module/cpu_boost/parameters/boost_ms",
	}},
	{ SOptionList:{
		title:"Set input Boost frequency",
		description:" This will boost your minimum CPU speed to the selected frequency when you touch the screen or press a button. Default is 0 kHz meaning it will jump in immediately.",
		unit:" kHz",
		default:`cat /sys/module/cpu_boost/parameters/input_boost_freq`,
		action:"generic /sys/module/cpu_boost/parameters/input_boost_freq",
		values:[0, 300000, 422400, 652800, 729600, 883200, 960000, 1036800, 1190400, 1267200, 1497600, 1574400, 1728000, 1958400, 2265600,]
	}},
	{ SSeekBar:{
		title:"Set Input_Boost time in milliseconds ",
		description:" Minimum interval a CPU is boosted when input is detected. Default is 40.",
		unit:" ms",
		max:100,
		min:10,
		step:10,
		default:`cat /sys/module/cpu_boost/parameters/input_boost_ms`,
		action:"generic /sys/module/cpu_boost/parameters/input_boost_ms",
	}},
    ]
}
CTAG
